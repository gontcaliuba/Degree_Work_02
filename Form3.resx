<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="RemindMessage.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAEsAcwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKAE3c0pbFZviXxLp/gzw9f6vq19Z6XpOlW8l5e3t3MsNvaQRqXklkdiFVFUF
        ixOAASa/ln/4K/8A/Bz18WP24PHU2g/BnXvFHwj+E+nXK3Ng+nTyaR4m1cm2RJFv57e5kHlrIZ9kULKh
        V1MgkZUKAH9LHxj/AG4/gr+zt4kXRviB8Xvhf4F1holnWx8Q+KrHS7lo2ztcRzyo204ODjBwa1Pgr+1b
        8L/2lEum+HPxI8B+P1sf+PlvDfiC01UW/T7/AJEj7eo6+tfwoapq91r2qXF9fXU97e3srz3FxPIZJZ5H
        JZndycsxJJJJySea0fh58SvEXwk8X2fiDwpr+teGNe02QS2mpaTfS2V5auDkNHLGyup9wc0+Vgf3tCRS
        Bz97p70b+ehr+b//AIIY/wDB0T468D/E3wz8Jf2jtaufGng/WriHR9J8X3YRtY0i6uLi2hibUbyaeNJL
        CNTNJJNIr3C5zvdQEH9H6S7gPekA+iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooA/Hn/g8l/bDuvg3+wR4X+E1nbKzfGrVm+3XDkHyrPS5bW6ZFG0/M1w9ochhgRsOdxx/MbX9AH/
        AAfL/wDHl+zD/wBdPFP8tHr+f+rjsAUUUUwCv68P+DY79sO8/a+/4JJ+BxqNqlvqHwulPw+lkQjbcx2F
        vbm2cAAYP2Wa3VuuWRmzzgfyH1/T9/wZbf8AKK7xt/2VLUf/AE16TUyA/XqiiipAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKaGzj3/SgD8Cf+D5f/AI8v2Yf+unin+Wj1/P8A1/QB/wAH
        y/8Ax5fsw/8AXTxT/LR6/n/q47AFFFFMAr+n/wD4Mtf+UVvjb/sqOo/+mvSa/mAr+n//AIMtf+UVvjb/
        ALKjqP8A6a9JqZAfrzRSM2KWpAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoY4FFFAH4H/
        APBxR/wcZfGf9lb9r7xP8Afg2+meCV8IwWB1bxO9pHeandT3FrDe7bcSboYohFcRod0bSFw+GUYzj/8A
        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
        wTW/aa0z4reA9P8ADmpeJNJtLm0ig122luLJkniMTllilifIVjjDjnrnpV9AP7frDTLfSdOhtbWGG1t7
        dBHFFCgRIlAwFVRwAB0Aq1X84P7IX/B3R+0t8e/2svhf4G1rwp8FbfSPGni3StBvpLPRdRS4SC6vIYJG
        jZr9lDhJGKkqRkDIPSv6PqgAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KAKWvWrXuh3kMY3SSwOiDOMkqQK/kSH/AAa6/t1Y/wCSG/8Al5+H/wD5Or+vqigD+QX/AIhdf26v+iG/
        +Xn4f/8Ak6j/AIhdf26v+iG/+Xn4f/8Ak6v6+qKd2B/Kr+xB/wAG3n7aHwh/bR+EPi7xF8Gv7P8AD/hf
        xtour6nd/wDCW6FL9mtbe/hlmk2Jes7bURjtVSxxgAniv6qqKKQBRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
        FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/2Q==
</value>
  </data>
</root>